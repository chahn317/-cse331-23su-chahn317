## CSE 331 hw-setup Questions
## Part 7: Answering Questions About the Code

1. Why did Fibonacci fail the testThrowsIllegalArgumentException< test? What (if anything) did
you have to do to fix it? If you did not have to change anything to fix this issue, explain why.

Fibonacci failed this test because the code threw an exception if n <= 0, even though 0 is
non-negative. I fixed this by changing n <= 0 to n < 0 on line 32.

2. Why did Fibonacci fail the testBaseCase test? What (if anything) did you have to do to fix
it? If you did not have to change anything to fix this issue, explain why.

Fibonacci failed this test because the code threw an exception if n was 0, which meant that
fib.getFibTerm(0) was not equal to 1. I fixed this by changing n <= 0 to n < 0 on line 32.

3.Why did Fibonacci fail the testInductiveCase test? What (if anything) did you have to do to
fix it? If you did not have to change anything to fix this issue, explain why.

Fibonacci failed this test because the term at index 2 shouldn't be 1, but the code treated
it as if it was. I fixed this by changing n <= 2 to n < 2 on line 34.

## Part 8: Debugger Tutorial

1. What are the values of "x", "y", and "sum" printed by your statement? Why was x not equal 
to the first integer entered here, and how could we fix this?

According to the print statement, x=4, y=4, and sum=0. x is not equal to the first integer
entered because integer division in Java removes everything after the decimal, meaning that
the expression 2 * (console.nextInt() / 2) would equal 4 if we enter 5 since 5 / 2 = 2.
We could fix this by changing this expression to be console.nextInt() instead.

2. What are all the names and values listed in the “Variables” panel? What does the “frames” 
tab list as the current method and line number? (Write down the text that was highlighted when 
the Debug perspective first opened.)

Variables: x = 3, y = 4
Frames tab: computeSum, line 43

3. What are all the names and values listed in the “Variables” panel after each of the two step overs?

First step over:
args = []
console = "java.util.Scanner[delimiters=\p{javaWhitespace}+][position=3][match valid=true][need input=false][source closed=false][skipped=false][group separator=\x{2c}][decimal separator=\x{2e}][positive prefix=][negative prefix=\Q-\E][positive suffix=][negative suffix=][NaN string=\QNaN\E][infinity string=\Q∞\E]"
x = 3
y = 4

Second step over;
args = []
console = "java.util.Scanner[delimiters=\p{javaWhitespace}+][position=3][match valid=true][need input=false][source closed=false][skipped=false][group separator=\x{2c}][decimal separator=\x{2e}][positive prefix=][negative prefix=\Q-\E][positive suffix=][negative suffix=][NaN string=\QNaN\E][infinity string=\Q∞\E]"
x = 3
y = 4
sum = -1
